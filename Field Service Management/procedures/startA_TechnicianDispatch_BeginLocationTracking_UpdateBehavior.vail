PROCEDURE startA_TechnicianDispatch_BeginLocationTracking_UpdateBehavior(collaboration, event) HIDDEN WITH ars_dependentResource="/collaborationtypes/TechnicianDispatch"

log.debug("collaboration.TechnicianDispatch.BeginLocationTracking.update: Location update event occurred for collaboration type: TechnicianDispatch activity: BeginLocationTracking collaborationId: {}", [collaboration.id])

// Publish events to update badging in UI
PUBLISH {collaboration: collaboration.id, task: "BeginLocationTracking", event: "update"} TO TOPIC "/collaborationtypes/TechnicianDispatch/debug"

// get the collaboration type and this activity type from the collaboration type
SELECT EXACTLY ONE FROM collaborationtypes as ct WHERE name == collaboration.collaborationType
var activityType = ct.assembly["BeginLocationTracking"]

// create a context for executing any arrival behaviors
var context = CollaborationGeneration.establishCollaborationContext(collaboration, activityType.instanceParameters)
context.event = event
IF (true
        ) {

context = CollaborationGeneration.reEstablishCollaborationContext(context)
startA_TechnicianDispatch_TrackProgress(context.collaboration, [ event, collaboration.results.Initiate.event])

}


log.debug("collaboration.TechnicianDispatch.BeginLocationTracking.update: Successfully executed all update behaviors for collaboration id: {}", [collaboration.id])